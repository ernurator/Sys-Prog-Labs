
trap2:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 6a 2f 00 00    	pushq  0x2f6a(%rip)        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 6b 2f 00 00 	bnd jmpq *0x2f6b(%rip)        # 3f98 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop

Disassembly of section .plt.got:

00000000000010a0 <__cxa_finalize@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 4d 2f 00 00 	bnd jmpq *0x2f4d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010b0 <puts@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 e5 2e 00 00 	bnd jmpq *0x2ee5(%rip)        # 3fa0 <puts@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <__stack_chk_fail@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 dd 2e 00 00 	bnd jmpq *0x2edd(%rip)        # 3fa8 <__stack_chk_fail@GLIBC_2.4>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <memset@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 d5 2e 00 00 	bnd jmpq *0x2ed5(%rip)        # 3fb0 <memset@GLIBC_2.2.5>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <fgets@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 cd 2e 00 00 	bnd jmpq *0x2ecd(%rip)        # 3fb8 <fgets@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <strtok@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 c5 2e 00 00 	bnd jmpq *0x2ec5(%rip)        # 3fc0 <strtok@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <atoi@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 bd 2e 00 00 	bnd jmpq *0x2ebd(%rip)        # 3fc8 <atoi@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <exit@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 b5 2e 00 00 	bnd jmpq *0x2eb5(%rip)        # 3fd0 <exit@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001120 <_start>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	31 ed                	xor    %ebp,%ebp
    1126:	49 89 d1             	mov    %rdx,%r9
    1129:	5e                   	pop    %rsi
    112a:	48 89 e2             	mov    %rsp,%rdx
    112d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1131:	50                   	push   %rax
    1132:	54                   	push   %rsp
    1133:	4c 8d 05 76 03 00 00 	lea    0x376(%rip),%r8        # 14b0 <__libc_csu_fini>
    113a:	48 8d 0d ff 02 00 00 	lea    0x2ff(%rip),%rcx        # 1440 <__libc_csu_init>
    1141:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1209 <main>
    1148:	ff 15 92 2e 00 00    	callq  *0x2e92(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    114e:	f4                   	hlt    
    114f:	90                   	nop

0000000000001150 <deregister_tm_clones>:
    1150:	48 8d 3d c1 2e 00 00 	lea    0x2ec1(%rip),%rdi        # 4018 <__TMC_END__>
    1157:	48 8d 05 ba 2e 00 00 	lea    0x2eba(%rip),%rax        # 4018 <__TMC_END__>
    115e:	48 39 f8             	cmp    %rdi,%rax
    1161:	74 15                	je     1178 <deregister_tm_clones+0x28>
    1163:	48 8b 05 6e 2e 00 00 	mov    0x2e6e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    116a:	48 85 c0             	test   %rax,%rax
    116d:	74 09                	je     1178 <deregister_tm_clones+0x28>
    116f:	ff e0                	jmpq   *%rax
    1171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <register_tm_clones>:
    1180:	48 8d 3d 91 2e 00 00 	lea    0x2e91(%rip),%rdi        # 4018 <__TMC_END__>
    1187:	48 8d 35 8a 2e 00 00 	lea    0x2e8a(%rip),%rsi        # 4018 <__TMC_END__>
    118e:	48 29 fe             	sub    %rdi,%rsi
    1191:	48 89 f0             	mov    %rsi,%rax
    1194:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1198:	48 c1 f8 03          	sar    $0x3,%rax
    119c:	48 01 c6             	add    %rax,%rsi
    119f:	48 d1 fe             	sar    %rsi
    11a2:	74 14                	je     11b8 <register_tm_clones+0x38>
    11a4:	48 8b 05 45 2e 00 00 	mov    0x2e45(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    11ab:	48 85 c0             	test   %rax,%rax
    11ae:	74 08                	je     11b8 <register_tm_clones+0x38>
    11b0:	ff e0                	jmpq   *%rax
    11b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11b8:	c3                   	retq   
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <__do_global_dtors_aux>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	80 3d 5d 2e 00 00 00 	cmpb   $0x0,0x2e5d(%rip)        # 4028 <completed.0>
    11cb:	75 2b                	jne    11f8 <__do_global_dtors_aux+0x38>
    11cd:	55                   	push   %rbp
    11ce:	48 83 3d 22 2e 00 00 	cmpq   $0x0,0x2e22(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11d5:	00 
    11d6:	48 89 e5             	mov    %rsp,%rbp
    11d9:	74 0c                	je     11e7 <__do_global_dtors_aux+0x27>
    11db:	48 8b 3d 26 2e 00 00 	mov    0x2e26(%rip),%rdi        # 4008 <__dso_handle>
    11e2:	e8 b9 fe ff ff       	callq  10a0 <__cxa_finalize@plt>
    11e7:	e8 64 ff ff ff       	callq  1150 <deregister_tm_clones>
    11ec:	c6 05 35 2e 00 00 01 	movb   $0x1,0x2e35(%rip)        # 4028 <completed.0>
    11f3:	5d                   	pop    %rbp
    11f4:	c3                   	retq   
    11f5:	0f 1f 00             	nopl   (%rax)
    11f8:	c3                   	retq   
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001200 <frame_dummy>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	e9 77 ff ff ff       	jmpq   1180 <register_tm_clones>

0000000000001209 <main>:
    1209:	f3 0f 1e fa          	endbr64 
    120d:	55                   	push   %rbp
    120e:	48 89 e5             	mov    %rsp,%rbp
    1211:	41 57                	push   %r15
    1213:	41 56                	push   %r14
    1215:	41 55                	push   %r13
    1217:	41 54                	push   %r12
    1219:	53                   	push   %rbx
    121a:	48 83 ec 58          	sub    $0x58,%rsp
    121e:	89 7d 8c             	mov    %edi,-0x74(%rbp)
    1221:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    1225:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    122c:	00 00 
    122e:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1232:	31 c0                	xor    %eax,%eax
    1234:	48 89 e0             	mov    %rsp,%rax
    1237:	48 89 c3             	mov    %rax,%rbx
    123a:	48 8d 05 c7 0d 00 00 	lea    0xdc7(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    1241:	48 89 c7             	mov    %rax,%rdi
    1244:	e8 67 fe ff ff       	callq  10b0 <puts@plt>
    1249:	8b 05 c1 2d 00 00    	mov    0x2dc1(%rip),%eax        # 4010 <MINBUF_SIZE>
    124f:	48 63 d0             	movslq %eax,%rdx
    1252:	48 83 ea 01          	sub    $0x1,%rdx
    1256:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    125a:	48 63 d0             	movslq %eax,%rdx
    125d:	49 89 d6             	mov    %rdx,%r14
    1260:	41 bf 00 00 00 00    	mov    $0x0,%r15d
    1266:	48 63 d0             	movslq %eax,%rdx
    1269:	49 89 d4             	mov    %rdx,%r12
    126c:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    1272:	48 98                	cltq   
    1274:	ba 10 00 00 00       	mov    $0x10,%edx
    1279:	48 83 ea 01          	sub    $0x1,%rdx
    127d:	48 01 d0             	add    %rdx,%rax
    1280:	be 10 00 00 00       	mov    $0x10,%esi
    1285:	ba 00 00 00 00       	mov    $0x0,%edx
    128a:	48 f7 f6             	div    %rsi
    128d:	48 6b c0 10          	imul   $0x10,%rax,%rax
    1291:	48 89 c1             	mov    %rax,%rcx
    1294:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    129b:	48 89 e2             	mov    %rsp,%rdx
    129e:	48 29 ca             	sub    %rcx,%rdx
    12a1:	48 39 d4             	cmp    %rdx,%rsp
    12a4:	74 12                	je     12b8 <main+0xaf>
    12a6:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    12ad:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    12b4:	00 00 
    12b6:	eb e9                	jmp    12a1 <main+0x98>
    12b8:	48 89 c2             	mov    %rax,%rdx
    12bb:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    12c1:	48 29 d4             	sub    %rdx,%rsp
    12c4:	48 89 c2             	mov    %rax,%rdx
    12c7:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    12cd:	48 85 d2             	test   %rdx,%rdx
    12d0:	74 10                	je     12e2 <main+0xd9>
    12d2:	25 ff 0f 00 00       	and    $0xfff,%eax
    12d7:	48 83 e8 08          	sub    $0x8,%rax
    12db:	48 01 e0             	add    %rsp,%rax
    12de:	48 83 08 00          	orq    $0x0,(%rax)
    12e2:	48 89 e0             	mov    %rsp,%rax
    12e5:	48 83 c0 00          	add    $0x0,%rax
    12e9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    12ed:	8b 05 1d 2d 00 00    	mov    0x2d1d(%rip),%eax        # 4010 <MINBUF_SIZE>
    12f3:	48 63 d0             	movslq %eax,%rdx
    12f6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    12fa:	be 00 00 00 00       	mov    $0x0,%esi
    12ff:	48 89 c7             	mov    %rax,%rdi
    1302:	e8 c9 fd ff ff       	callq  10d0 <memset@plt>
    1307:	48 8b 15 12 2d 00 00 	mov    0x2d12(%rip),%rdx        # 4020 <stdin@@GLIBC_2.2.5>
    130e:	8b 0d fc 2c 00 00    	mov    0x2cfc(%rip),%ecx        # 4010 <MINBUF_SIZE>
    1314:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1318:	89 ce                	mov    %ecx,%esi
    131a:	48 89 c7             	mov    %rax,%rdi
    131d:	e8 be fd ff ff       	callq  10e0 <fgets@plt>
    1322:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    1326:	48 8d 15 fb 0c 00 00 	lea    0xcfb(%rip),%rdx        # 2028 <_IO_stdin_used+0x28>
    132d:	48 89 d6             	mov    %rdx,%rsi
    1330:	48 89 c7             	mov    %rax,%rdi
    1333:	e8 b8 fd ff ff       	callq  10f0 <strtok@plt>
    1338:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    133c:	48 8d 05 e5 0c 00 00 	lea    0xce5(%rip),%rax        # 2028 <_IO_stdin_used+0x28>
    1343:	48 89 c6             	mov    %rax,%rsi
    1346:	bf 00 00 00 00       	mov    $0x0,%edi
    134b:	e8 a0 fd ff ff       	callq  10f0 <strtok@plt>
    1350:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    1354:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    1359:	74 07                	je     1362 <main+0x159>
    135b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    1360:	75 19                	jne    137b <main+0x172>
    1362:	48 8d 05 c2 0c 00 00 	lea    0xcc2(%rip),%rax        # 202b <_IO_stdin_used+0x2b>
    1369:	48 89 c7             	mov    %rax,%rdi
    136c:	e8 3f fd ff ff       	callq  10b0 <puts@plt>
    1371:	bf 01 00 00 00       	mov    $0x1,%edi
    1376:	e8 95 fd ff ff       	callq  1110 <exit@plt>
    137b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    137f:	48 89 c7             	mov    %rax,%rdi
    1382:	e8 79 fd ff ff       	callq  1100 <atoi@plt>
    1387:	89 45 9c             	mov    %eax,-0x64(%rbp)
    138a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    138e:	48 89 c7             	mov    %rax,%rdi
    1391:	e8 6a fd ff ff       	callq  1100 <atoi@plt>
    1396:	89 45 a0             	mov    %eax,-0x60(%rbp)
    1399:	8b 55 a0             	mov    -0x60(%rbp),%edx
    139c:	8b 45 9c             	mov    -0x64(%rbp),%eax
    139f:	89 d6                	mov    %edx,%esi
    13a1:	89 c7                	mov    %eax,%edi
    13a3:	e8 54 00 00 00       	callq  13fc <trap2>
    13a8:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    13ab:	83 7d a4 01          	cmpl   $0x1,-0x5c(%rbp)
    13af:	75 11                	jne    13c2 <main+0x1b9>
    13b1:	48 8d 05 90 0c 00 00 	lea    0xc90(%rip),%rax        # 2048 <_IO_stdin_used+0x48>
    13b8:	48 89 c7             	mov    %rax,%rdi
    13bb:	e8 f0 fc ff ff       	callq  10b0 <puts@plt>
    13c0:	eb 0f                	jmp    13d1 <main+0x1c8>
    13c2:	48 8d 05 a7 0c 00 00 	lea    0xca7(%rip),%rax        # 2070 <_IO_stdin_used+0x70>
    13c9:	48 89 c7             	mov    %rax,%rdi
    13cc:	e8 df fc ff ff       	callq  10b0 <puts@plt>
    13d1:	b8 00 00 00 00       	mov    $0x0,%eax
    13d6:	48 89 dc             	mov    %rbx,%rsp
    13d9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    13dd:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    13e4:	00 00 
    13e6:	74 05                	je     13ed <main+0x1e4>
    13e8:	e8 d3 fc ff ff       	callq  10c0 <__stack_chk_fail@plt>
    13ed:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    13f1:	5b                   	pop    %rbx
    13f2:	41 5c                	pop    %r12
    13f4:	41 5d                	pop    %r13
    13f6:	41 5e                	pop    %r14
    13f8:	41 5f                	pop    %r15
    13fa:	5d                   	pop    %rbp
    13fb:	c3                   	retq   

00000000000013fc <trap2>:
    13fc:	f3 0f 1e fa          	endbr64 
    1400:	55                   	push   %rbp
    1401:	48 89 e5             	mov    %rsp,%rbp
    1404:	89 7d ec             	mov    %edi,-0x14(%rbp)
    1407:	89 75 e8             	mov    %esi,-0x18(%rbp)
    140a:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1411:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1418:	eb 08                	jmp    1422 <trap2+0x26>
    141a:	83 45 f8 64          	addl   $0x64,-0x8(%rbp)
    141e:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1422:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)
    1426:	7e f2                	jle    141a <trap2+0x1e>
    1428:	8b 55 ec             	mov    -0x14(%rbp),%edx
    142b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    142e:	01 c2                	add    %eax,%edx
    1430:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1433:	01 c0                	add    %eax,%eax
    1435:	39 c2                	cmp    %eax,%edx
    1437:	0f 94 c0             	sete   %al
    143a:	0f b6 c0             	movzbl %al,%eax
    143d:	5d                   	pop    %rbp
    143e:	c3                   	retq   
    143f:	90                   	nop

0000000000001440 <__libc_csu_init>:
    1440:	f3 0f 1e fa          	endbr64 
    1444:	41 57                	push   %r15
    1446:	4c 8d 3d 3b 29 00 00 	lea    0x293b(%rip),%r15        # 3d88 <__frame_dummy_init_array_entry>
    144d:	41 56                	push   %r14
    144f:	49 89 d6             	mov    %rdx,%r14
    1452:	41 55                	push   %r13
    1454:	49 89 f5             	mov    %rsi,%r13
    1457:	41 54                	push   %r12
    1459:	41 89 fc             	mov    %edi,%r12d
    145c:	55                   	push   %rbp
    145d:	48 8d 2d 2c 29 00 00 	lea    0x292c(%rip),%rbp        # 3d90 <__do_global_dtors_aux_fini_array_entry>
    1464:	53                   	push   %rbx
    1465:	4c 29 fd             	sub    %r15,%rbp
    1468:	48 83 ec 08          	sub    $0x8,%rsp
    146c:	e8 8f fb ff ff       	callq  1000 <_init>
    1471:	48 c1 fd 03          	sar    $0x3,%rbp
    1475:	74 1f                	je     1496 <__libc_csu_init+0x56>
    1477:	31 db                	xor    %ebx,%ebx
    1479:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1480:	4c 89 f2             	mov    %r14,%rdx
    1483:	4c 89 ee             	mov    %r13,%rsi
    1486:	44 89 e7             	mov    %r12d,%edi
    1489:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    148d:	48 83 c3 01          	add    $0x1,%rbx
    1491:	48 39 dd             	cmp    %rbx,%rbp
    1494:	75 ea                	jne    1480 <__libc_csu_init+0x40>
    1496:	48 83 c4 08          	add    $0x8,%rsp
    149a:	5b                   	pop    %rbx
    149b:	5d                   	pop    %rbp
    149c:	41 5c                	pop    %r12
    149e:	41 5d                	pop    %r13
    14a0:	41 5e                	pop    %r14
    14a2:	41 5f                	pop    %r15
    14a4:	c3                   	retq   
    14a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    14ac:	00 00 00 00 

00000000000014b0 <__libc_csu_fini>:
    14b0:	f3 0f 1e fa          	endbr64 
    14b4:	c3                   	retq   

Disassembly of section .fini:

00000000000014b8 <_fini>:
    14b8:	f3 0f 1e fa          	endbr64 
    14bc:	48 83 ec 08          	sub    $0x8,%rsp
    14c0:	48 83 c4 08          	add    $0x8,%rsp
    14c4:	c3                   	retq   
